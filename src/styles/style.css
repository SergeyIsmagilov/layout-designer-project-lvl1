/*
В этой заметке я буду отслежывать свой прогресс понимания методологий OOCSS и Atomic CSS,
которые необходимо использовать в рамках текущего проекта.
Статус до начала разработки:
Кажется, смысл в том, чтобы создать как можно больше переиспользуемых классов.
Буквально для каждого используемого в проекте свойства.
Upd: Сложно понять методологию, когда совсем нет опыта. Нужно "набить руку", посмотреть,
как работают в компании, в которую я устроюсь. Я потрачу слишком много времени,
если буду уделять этому особенно пристальное внимание. Пока буду записывать всё так,
как мне сейчас кажется удобным.
*/

/* !Названия классов будут сокращены в будущем! */

:root {
  --white: #fff;
  --whitehalf: #d7ccc0;
  --light: #f5f4f0;
  --main: #fe8a02;
  --maindark: #42413c;
  --dark: #2a2626;
  --darkhalf: #908d8b;
  --brown: #b09a81;
  --blue: #1085c5;
  --hover: #ea7600;
}

/* Свойства позиционирования */

.position-relative {
  position: relative;
}

.position-header-img {
  position: absolute;
  top: 55px;
  right: -270px;
  z-index: -10;

  height: 525px;
}

/* Свойства, определяющие box-model */

.flex-space {
  display: flex;
  justify-content: space-between;
}

.block-width {
  width: 540px;
}

.padding-tb-100 {
  padding: 100px 0;
}

.padding-tb-200-100 {
  padding-top: 200px;
  padding-bottom: 100px;
}

.max-width {
  max-width: 1110px;
}

.margin-center {
  margin: 0 auto;
}

.margin-0 { /* если обнулить внешние отступы по умолчанию, можно будет много откуда убрать этот класс */
  margin: 0;
}

.margin-top-180 {
  margin-top: 180px;
}

/* Свойства типографики */

@font-face {
  font-family: "Open Sans";
  src: url("../fonts/OpenSans-VariableFont_wdth,wght.ttf");
}

@font-face {
  font-family: Neucha;
  src: url("../fonts/Neucha-Regular.ttf");
}

.font-main {
  color: var(--dark);
  font-size: 16px;
  font-family: "Open Sans", sans-serif;
  line-height: 1.6em;
}

.font-head {
  margin: 0;

  font-weight: normal;
  font-family: Neucha, cursive;
  line-height: 1.2em;
}

.p-neucha {
  font-size: 34px;
  font-family: Neucha, cursive;
  line-height: 1.2em;
}

.h0 {
  font-size: 24px;
}

h1 {
  font-size: 72px;
}

h2 {
  font-size: 60px;
}

h3 {
  font-size: 34px;
}

h4 {
  margin: 0;

  font-size: 14px;
  line-height: 1.2em;
}

/* Свойства, определяющие визуальный вид */

.bg {
  position: relative;
}

.bg::before {
  position: absolute;
  z-index: -100;

  width: 100%;
  height: 100%;

  background-color: var(--brown);
  background-image: url("../images/background.png");
  background-repeat: no-repeat;
  background-size: cover;

  opacity: 0.1;

  content: "";
}

.bg-brown {
  position: relative;
}

.bg-brown::before {
  position: absolute;
  z-index: -1000;

  width: 100%;
  height: 100%;

  background-color: var(--brown);

  content: "";
}

.bg-image {
  position: relative;
}

.bg-image::before {
  position: absolute;
  z-index: -100;

  width: 100%;
  height: 100%;

  background-image: url("../images/background.png");
  background-repeat: no-repeat;
  background-size: cover;

  opacity: 0.1;

  content: "";
}

/* bg-brown? */

/* Свойства анимации */

/* Свойства, не попавшие ни в одну категорию */

.overflow-hidden {
  overflow: hidden;
}

.button {
  display: inline-block;
  padding: 12px 24px;

  color: var(--white);
  font-weight: bold;

  background-color: var(--main);
}

.details {
  text-decoration: none;
}

.details:visited {
  color: var(--white);
}

.button:hover {
  background-color: var(--hover);
}

.color-head {
  color: var(--main);
}

.margin-tb-30 { /* заменить на "margin-top: 30px;"? */
  margin: 30px 0;
}

.margin-top-30 { /* а если по умолчанию обнулить внешние отступы? */
  margin: 30px 0 0;
}

.margin-top-15 {
  margin: 15px 0 0;
}

.margin-top-60 {
  margin: 60px 0 0;
}

.margin-bottom-40 {
  margin-bottom: 40px;
}

iframe {
  filter: drop-shadow(0 16px 32px rgba(0 0 0 / 15%));
}

.displacement-container {
  position: relative;
  top: 100px;

  text-align: center;
}

.background {
  position: relative;
}

.background::before {
  position: absolute;
  z-index: -100;

  width: 100%;
  height: 100%;

  background-color: var(--maindark);

  content: "";
}

.flex-container {
  display: flex;
  flex-wrap: wrap;
  gap: 20px 30px;
}

.card-head {
  font-size: 52px;
}

.color-white {
  color: var(--white);
}

.card-background {
  background: var(--light);
}

.card-width {
  position: relative;

  width: 302px;
  padding: 24px;
}

.numbers {
  margin: 0;
  padding-bottom: 40px;

  font-weight: normal;
  font-size: 64px;
  font-family: Neucha, cursive;
  line-height: 1;
}

.card-header {
  width: 350px;
}

.card-p {
  margin: 12px 0 0;
}

.text-decoration {
  text-decoration: none;
}

.fill {
  position: absolute;
  top: 0;
  left: 0;

  display: block;

  width: 100%;
  height: 100%;
}

.card-width:hover {
  color: var(--white);

  background-color: var(--main);
}

.card-width:hover h3 {
  color: var(--white);
}

.columns {
  columns: 2;
  column-gap: 30px;
}

.vertical-align-middle {
  vertical-align: middle;
}

.display-flex {
  display: flex;
}

.drop-shadow {
  filter: drop-shadow(0 16px 32px rgba(0 0 0 / 15%));
}

.background-brown {
  background-color: var(--brown);
}

.margin-t-100-b-20 {
  margin-top: 100px;
  margin-bottom: 20px;
}

.margin-0-0-26 {
  margin: 0 0 26px;
}

.padding-5-10 {
  padding: 5px 10px;
}

.color-darkhalf { /* раз уж цвет в переменной, дать название классу, отображающее объект, у которого он меняется? */
  color: var(--darkhalf);
}

.color-whitehalf {
  color: var(--whitehalf);
}

.color-brown {
  color: var(--brown);
}

.background-white {
  background-color: var(--white);
}
